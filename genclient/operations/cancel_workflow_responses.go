// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/workflow-goclient/models"
)

// CancelWorkflowReader is a Reader for the CancelWorkflow structure.
type CancelWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCancelWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCancelWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCancelWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCancelWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCancelWorkflowDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCancelWorkflowOK creates a CancelWorkflowOK with default headers values
func NewCancelWorkflowOK() *CancelWorkflowOK {
	return &CancelWorkflowOK{}
}

/*CancelWorkflowOK handles this case with default header values.

Successfully cancelled workflow
*/
type CancelWorkflowOK struct {
}

func (o *CancelWorkflowOK) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/cancel][%d] cancelWorkflowOK ", 200)
}

func (o *CancelWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelWorkflowUnauthorized creates a CancelWorkflowUnauthorized with default headers values
func NewCancelWorkflowUnauthorized() *CancelWorkflowUnauthorized {
	return &CancelWorkflowUnauthorized{}
}

/*CancelWorkflowUnauthorized handles this case with default header values.

Not authorized
*/
type CancelWorkflowUnauthorized struct {
	Payload *models.Error
}

func (o *CancelWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/cancel][%d] cancelWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *CancelWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelWorkflowForbidden creates a CancelWorkflowForbidden with default headers values
func NewCancelWorkflowForbidden() *CancelWorkflowForbidden {
	return &CancelWorkflowForbidden{}
}

/*CancelWorkflowForbidden handles this case with default header values.

Forbidden
*/
type CancelWorkflowForbidden struct {
	Payload *models.Error
}

func (o *CancelWorkflowForbidden) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/cancel][%d] cancelWorkflowForbidden  %+v", 403, o.Payload)
}

func (o *CancelWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelWorkflowNotFound creates a CancelWorkflowNotFound with default headers values
func NewCancelWorkflowNotFound() *CancelWorkflowNotFound {
	return &CancelWorkflowNotFound{}
}

/*CancelWorkflowNotFound handles this case with default header values.

Not found
*/
type CancelWorkflowNotFound struct {
}

func (o *CancelWorkflowNotFound) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/cancel][%d] cancelWorkflowNotFound ", 404)
}

func (o *CancelWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelWorkflowDefault creates a CancelWorkflowDefault with default headers values
func NewCancelWorkflowDefault(code int) *CancelWorkflowDefault {
	return &CancelWorkflowDefault{
		_statusCode: code,
	}
}

/*CancelWorkflowDefault handles this case with default header values.

unexpected error
*/
type CancelWorkflowDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the cancel workflow default response
func (o *CancelWorkflowDefault) Code() int {
	return o._statusCode
}

func (o *CancelWorkflowDefault) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/cancel][%d] cancelWorkflow default  %+v", o._statusCode, o.Payload)
}

func (o *CancelWorkflowDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
