// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/workflow-goclient/models"
)

// NewUpdateActivityParams creates a new UpdateActivityParams object
// with the default values initialized.
func NewUpdateActivityParams() *UpdateActivityParams {
	var ()
	return &UpdateActivityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateActivityParamsWithTimeout creates a new UpdateActivityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateActivityParamsWithTimeout(timeout time.Duration) *UpdateActivityParams {
	var ()
	return &UpdateActivityParams{

		timeout: timeout,
	}
}

// NewUpdateActivityParamsWithContext creates a new UpdateActivityParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateActivityParamsWithContext(ctx context.Context) *UpdateActivityParams {
	var ()
	return &UpdateActivityParams{

		Context: ctx,
	}
}

// NewUpdateActivityParamsWithHTTPClient creates a new UpdateActivityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateActivityParamsWithHTTPClient(client *http.Client) *UpdateActivityParams {
	var ()
	return &UpdateActivityParams{
		HTTPClient: client,
	}
}

/*UpdateActivityParams contains all the parameters to send to the API endpoint
for the update activity operation typically these are written to a http.Request
*/
type UpdateActivityParams struct {

	/*Activity*/
	Activity *models.Activity
	/*ActivityID
	  Activity identifier

	*/
	ActivityID string
	/*ID
	  Workflow identifier

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update activity params
func (o *UpdateActivityParams) WithTimeout(timeout time.Duration) *UpdateActivityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update activity params
func (o *UpdateActivityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update activity params
func (o *UpdateActivityParams) WithContext(ctx context.Context) *UpdateActivityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update activity params
func (o *UpdateActivityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update activity params
func (o *UpdateActivityParams) WithHTTPClient(client *http.Client) *UpdateActivityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update activity params
func (o *UpdateActivityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActivity adds the activity to the update activity params
func (o *UpdateActivityParams) WithActivity(activity *models.Activity) *UpdateActivityParams {
	o.SetActivity(activity)
	return o
}

// SetActivity adds the activity to the update activity params
func (o *UpdateActivityParams) SetActivity(activity *models.Activity) {
	o.Activity = activity
}

// WithActivityID adds the activityID to the update activity params
func (o *UpdateActivityParams) WithActivityID(activityID string) *UpdateActivityParams {
	o.SetActivityID(activityID)
	return o
}

// SetActivityID adds the activityId to the update activity params
func (o *UpdateActivityParams) SetActivityID(activityID string) {
	o.ActivityID = activityID
}

// WithID adds the id to the update activity params
func (o *UpdateActivityParams) WithID(id string) *UpdateActivityParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update activity params
func (o *UpdateActivityParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateActivityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Activity == nil {
		o.Activity = new(models.Activity)
	}

	if err := r.SetBodyParam(o.Activity); err != nil {
		return err
	}

	// path param activityId
	if err := r.SetPathParam("activityId", o.ActivityID); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
