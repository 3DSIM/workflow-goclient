// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/workflow-goclient/models"
)

// UpdateActivityReader is a Reader for the UpdateActivity structure.
type UpdateActivityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateActivityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateActivityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUpdateActivityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateActivityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateActivityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateActivityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateActivityOK creates a UpdateActivityOK with default headers values
func NewUpdateActivityOK() *UpdateActivityOK {
	return &UpdateActivityOK{}
}

/*UpdateActivityOK handles this case with default header values.

Successfully updated activity
*/
type UpdateActivityOK struct {
	Payload *models.Activity
}

func (o *UpdateActivityOK) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/activities/{activityId}][%d] updateActivityOK  %+v", 200, o.Payload)
}

func (o *UpdateActivityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Activity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateActivityUnauthorized creates a UpdateActivityUnauthorized with default headers values
func NewUpdateActivityUnauthorized() *UpdateActivityUnauthorized {
	return &UpdateActivityUnauthorized{}
}

/*UpdateActivityUnauthorized handles this case with default header values.

Not authorized
*/
type UpdateActivityUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateActivityUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/activities/{activityId}][%d] updateActivityUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateActivityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateActivityForbidden creates a UpdateActivityForbidden with default headers values
func NewUpdateActivityForbidden() *UpdateActivityForbidden {
	return &UpdateActivityForbidden{}
}

/*UpdateActivityForbidden handles this case with default header values.

Forbidden
*/
type UpdateActivityForbidden struct {
	Payload *models.Error
}

func (o *UpdateActivityForbidden) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/activities/{activityId}][%d] updateActivityForbidden  %+v", 403, o.Payload)
}

func (o *UpdateActivityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateActivityNotFound creates a UpdateActivityNotFound with default headers values
func NewUpdateActivityNotFound() *UpdateActivityNotFound {
	return &UpdateActivityNotFound{}
}

/*UpdateActivityNotFound handles this case with default header values.

Not found
*/
type UpdateActivityNotFound struct {
}

func (o *UpdateActivityNotFound) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/activities/{activityId}][%d] updateActivityNotFound ", 404)
}

func (o *UpdateActivityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateActivityDefault creates a UpdateActivityDefault with default headers values
func NewUpdateActivityDefault(code int) *UpdateActivityDefault {
	return &UpdateActivityDefault{
		_statusCode: code,
	}
}

/*UpdateActivityDefault handles this case with default header values.

unexpected error
*/
type UpdateActivityDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update activity default response
func (o *UpdateActivityDefault) Code() int {
	return o._statusCode
}

func (o *UpdateActivityDefault) Error() string {
	return fmt.Sprintf("[PUT /workflows/{id}/activities/{activityId}][%d] updateActivity default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateActivityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
