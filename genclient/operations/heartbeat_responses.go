// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/workflow-goclient/models"
)

// HeartbeatReader is a Reader for the Heartbeat structure.
type HeartbeatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HeartbeatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewHeartbeatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewHeartbeatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewHeartbeatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewHeartbeatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewHeartbeatDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHeartbeatOK creates a HeartbeatOK with default headers values
func NewHeartbeatOK() *HeartbeatOK {
	return &HeartbeatOK{}
}

/*HeartbeatOK handles this case with default header values.

Heart beat acknowledged. Cancelled field in return value should be checked to determine if activity has been cancelled.
*/
type HeartbeatOK struct {
	Payload *models.Heartbeat
}

func (o *HeartbeatOK) Error() string {
	return fmt.Sprintf("[PUT /heartbeats][%d] heartbeatOK  %+v", 200, o.Payload)
}

func (o *HeartbeatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Heartbeat)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeartbeatUnauthorized creates a HeartbeatUnauthorized with default headers values
func NewHeartbeatUnauthorized() *HeartbeatUnauthorized {
	return &HeartbeatUnauthorized{}
}

/*HeartbeatUnauthorized handles this case with default header values.

Not authorized
*/
type HeartbeatUnauthorized struct {
	Payload *models.Error
}

func (o *HeartbeatUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /heartbeats][%d] heartbeatUnauthorized  %+v", 401, o.Payload)
}

func (o *HeartbeatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeartbeatForbidden creates a HeartbeatForbidden with default headers values
func NewHeartbeatForbidden() *HeartbeatForbidden {
	return &HeartbeatForbidden{}
}

/*HeartbeatForbidden handles this case with default header values.

Forbidden
*/
type HeartbeatForbidden struct {
	Payload *models.Error
}

func (o *HeartbeatForbidden) Error() string {
	return fmt.Sprintf("[PUT /heartbeats][%d] heartbeatForbidden  %+v", 403, o.Payload)
}

func (o *HeartbeatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeartbeatNotFound creates a HeartbeatNotFound with default headers values
func NewHeartbeatNotFound() *HeartbeatNotFound {
	return &HeartbeatNotFound{}
}

/*HeartbeatNotFound handles this case with default header values.

Not found
*/
type HeartbeatNotFound struct {
}

func (o *HeartbeatNotFound) Error() string {
	return fmt.Sprintf("[PUT /heartbeats][%d] heartbeatNotFound ", 404)
}

func (o *HeartbeatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHeartbeatDefault creates a HeartbeatDefault with default headers values
func NewHeartbeatDefault(code int) *HeartbeatDefault {
	return &HeartbeatDefault{
		_statusCode: code,
	}
}

/*HeartbeatDefault handles this case with default header values.

unexpected error
*/
type HeartbeatDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the heartbeat default response
func (o *HeartbeatDefault) Code() int {
	return o._statusCode
}

func (o *HeartbeatDefault) Error() string {
	return fmt.Sprintf("[PUT /heartbeats][%d] heartbeat default  %+v", o._statusCode, o.Payload)
}

func (o *HeartbeatDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
